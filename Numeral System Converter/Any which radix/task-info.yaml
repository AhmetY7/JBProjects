type: edu
custom_name: stage4
files:
- name: test/ConverterTest.java
  visible: false
  text: |
    import converter.Main;
    import org.hyperskill.hstest.v6.stage.BaseStageTest;
    import org.hyperskill.hstest.v6.testcase.CheckResult;
    import org.hyperskill.hstest.v6.testcase.TestCase;

    import java.util.List;

    class Clue {

        final String input;
        final String answer;
        final boolean provideAnswer;

        Clue(final String input, final String answer, final boolean provideAnswer) {
            this.input = input;
            this.answer = answer;
            this.provideAnswer = provideAnswer;
        }

        Clue(final String input, final String answer) {
            this(input, answer, false);
        }

        Clue(final String input) {
            this(input, null, false);
        }
    }


    public class ConverterTest extends BaseStageTest<Clue> {

        public ConverterTest() throws Exception {
            super(Main.class);
        }

        static TestCase<Clue> testToAnswer(final String input, final String answer, final boolean provideAnswer) {
            return new TestCase<Clue>()
                .setAttach(new Clue(input, answer, provideAnswer))
                .setInput(input);
        }

        @Override
        public List<TestCase<Clue>> generate() {
            return List.of(
                /* Tests with a hint: */
                testToAnswer("10\n11\n2\n", "1011", true),
                testToAnswer("1\n11111\n10\n", "5", true),
                testToAnswer("10\n1000\n36\n", "rs", true),
                testToAnswer("21\n4242\n6\n", "451552", true),
                testToAnswer("7\n12\n11\n", "9", true),
                testToAnswer("5\n300\n10\n", "75", true),
                testToAnswer("1\n11111\n5\n", "10", true),
                testToAnswer("10\n4\n1\n", "1111", true),

                /* Tests without a hint: */
                testToAnswer("10\n12\n2\n", "1100", false),
                testToAnswer("1\n1111111\n10\n", "7", false),
                testToAnswer("10\n1001\n36\n", "rt", false),
                testToAnswer("21\n4243\n6\n", "451553", false),
                testToAnswer("7\n13\n11\n", "a", false),
                testToAnswer("5\n301\n10\n", "76", false),
                testToAnswer("1\n111111\n5\n", "11", false),
                testToAnswer("10\n5\n1\n", "11111", false)
            );
        }

        @Override
        public CheckResult check(String reply, Clue clue) {
            final String[] lines = reply
                .lines()
                .filter(line -> !line.isEmpty())
                .toArray(String[]::new);

            if (lines.length == 0) {
                return new CheckResult(
                    false,
                    "Your program doesn't print any line."
                );
            }

            final String answer = lines[lines.length - 1];

            if (!answer.equals(clue.answer)) {
                if (clue.provideAnswer) {
                    return new CheckResult(
                        false,
                        "Your answer is wrong.\n" +
                            "This is a sample test so we give you a hint.\n" +
                            "Input: " + clue.input + "\n" +
                            "Your answer: " + answer + "\n" +
                            "Correct answer: " + clue.answer
                    );
                } else {
                    return new CheckResult(
                        false,
                        "Your answer is wrong."
                    );
                }
            }

            return new CheckResult(true);
        }
    }
  learner_created: false
- name: src/converter/Main.java
  visible: true
  text: |
    package converter;

    import java.util.ArrayList;
    import java.util.Scanner;

    public class Main {
        private static void convertToRadix(String radix, int number) {
            ArrayList<Integer> result = new ArrayList<>();
            if("2".equals(radix)) {
                while (number >= 2) {
                    result.add(number%2);
                    number /= 2;
                }
                result.add(number);
                System.out.print("0b");
            } else if("8".equals(radix)) {
                while (number >= 8) {
                    result.add(number%8);
                    number /= 8;
                }
                result.add(number);
                System.out.print("0");
            } else {
                while (number >= 16) {
                    result.add(number%16);
                    number /= 16;
                }
                result.add(number);
                System.out.print("0x");
            }
            for(int i=result.size()-1; i>=0; i--) {
                if("2".equals(radix)) {
                    System.out.print(result.get(i));
                } else if("8".equals(radix)) {
                    System.out.print(result.get(i));
                } else {
                    switch (result.get(i)) {
                        case 10:
                            System.out.print("a");
                            break;
                        case 11:
                            System.out.print("b");
                            break;
                        case 12:
                            System.out.print("c");
                            break;
                        case 13:
                            System.out.print("d");
                            break;
                        case 14:
                            System.out.print("e");
                            break;
                        case 15:
                            System.out.print("f");
                            break;
                        default:
                            System.out.print(result.get(i));

                    }
                }
            }
        }
        public static void main(String[] args) {
            Scanner scanner = new Scanner(System.in);
            int number = Integer.parseInt(scanner.nextLine());
            String radix = scanner.nextLine();
            convertToRadix(radix, number);
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/41/stages/217/implement
status: Solved
record: 44
